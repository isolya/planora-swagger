openapi: 3.0.3
info:
  title: directory-service API
  version: 1.0.0
  description: OpenAPI спецификация для directory-service
paths:
  /users:
    get:
      tags:
      - Users
      summary: Список/поиск пользователей
      parameters:
      - name: q
        in: query
        schema:
          type: string
          description: Поиск по name/email/phone
      - name: email
        in: query
        schema:
          type: string
          format: email
      - name: role
        in: query
        schema:
          type: string
      - name: status
        in: query
        schema:
          type: string
          enum:
          - active
          - invited
          - suspended
          - deleted
      - name: orgUnitId
        in: query
        schema:
          type: string
      - name: managerId
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          type: integer
          default: 50
          minimum: 1
          maximum: 200
      - name: cursor
        in: query
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPage'
    post:
      tags:
      - Users
      summary: Создать пользователя (инвайт/привязка к IdP)
      description: Создаёт профиль в Directory и инициирует приглашение/создание учётной
        записи в IdP (Keycloak).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      tags:
      - Users
      summary: Получить пользователя
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
      - Users
      summary: Обновить профиль пользователя
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - Users
      summary: Деактивировать/удалить пользователя
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
  /users/{userId}/avatar/presign:
    post:
      tags:
      - Avatars
      summary: Presigned URL для аватара
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePresignRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePresignResponse'
  /groups:
    get:
      tags:
      - Groups
      summary: Список групп
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    post:
      tags:
      - Groups
      summary: Создать группу
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /users/import:
    post:
      tags:
      - Import/Export
      summary: Импорт пользователей (CSV/XLSX)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                dryRun:
                  type: boolean
                  default: true
              required:
              - file
      responses:
        '200':
          description: Результат импорта
          content:
            application/json:
              schema:
                type: object
                properties:
                  inserted:
                    type: integer
                  updated:
                    type: integer
                  errors:
                    type: array
                    items:
                      type: string
  /users/export:
    get:
      tags:
      - Import/Export
      summary: Экспорт пользователей (CSV/XLSX)
      parameters:
      - name: format
        in: query
        schema:
          type: string
          enum:
          - csv
          - xlsx
          default: csv
      responses:
        '200':
          description: File
          content:
            text/csv:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
components:
  schemas:
    FilePresignRequest:
      type: object
      properties:
        fileName:
          type: string
        contentType:
          type: string
        size:
          type: integer
      required:
      - fileName
      - contentType
      - size
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        phone:
          type: string
          nullable: true
        locale:
          type: string
          default: ru-RU
        tz:
          type: string
          default: Europe/Moscow
        status:
          type: string
          enum:
          - active
          - invited
          - suspended
          - deleted
          default: active
        managerId:
          type: string
          nullable: true
        orgUnitId:
          type: string
          nullable: true
        attributes:
          type: object
          additionalProperties: true
        avatarUrl:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
      required:
      - id
      - email
      - name
      - status
    UserPage:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextCursor:
          type: string
          nullable: true
    UserPatch:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
          nullable: true
        locale:
          type: string
        tz:
          type: string
        managerId:
          type: string
          nullable: true
        orgUnitId:
          type: string
          nullable: true
        attributes:
          type: object
          additionalProperties: true
    FilePresignResponse:
      type: object
      properties:
        uploadUrl:
          type: string
          format: uri
        fileUrl:
          type: string
          format: uri
      required:
      - uploadUrl
      - fileUrl
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        phone:
          type: string
          nullable: true
        locale:
          type: string
        tz:
          type: string
        managerId:
          type: string
          nullable: true
        orgUnitId:
          type: string
          nullable: true
        attributes:
          type: object
          additionalProperties: true
      required:
      - email
      - name
    Group:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        memberCount:
          type: integer
        createdAt:
          type: string
          format: date-time
      required:
      - id
      - name
    GroupCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
      required:
      - name
